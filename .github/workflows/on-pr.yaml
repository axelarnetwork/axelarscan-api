name: Test CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  CI: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["20.19.4"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set up environment variables
        run: |
          echo "ENVIRONMENT=testnet" >> $GITHUB_ENV
          echo "LOG_LEVEL=debug" >> $GITHUB_ENV
          echo "NODE_NO_WARNINGS=1" >> $GITHUB_ENV
          echo "INDEXER_URL=http://localhost:9200" >> $GITHUB_ENV
          echo "DD_TRACE_ENABLED=false" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build --platform linux/amd64 -t axelarscan-api:test .
          echo "Docker image built successfully"
          echo "DD_ENHANCED_METRICS=false" >> $GITHUB_ENV

      - name: Run linting check (non-blocking)
        run: |
          echo "Running ESLint..."
          pnpm lint:check || echo "Linting failed but continuing..."
          echo "Linting completed"

      - name: Run formatting check
        run: |
          echo "Running Prettier format check..."
          pnpm format:check
          echo "Format check completed"
